
// generated from <%= ridl_template_path %>
TAO_CORBA::Boolean operator<< (TAO_OutputCDR &<% if member_count > 0 || !base.nil? %>strm<% end %>, const <%= scoped_cxxname %> &<% if member_count > 0 || !base.nil? %>_tao_aggregate<% end %>)
{
% if member_count > 0 || !base.nil?
  return
% unless base.nil?
    (strm << static_cast<<%= base.cxxname %>>(_tao_aggregate))<%= ((member_count > 0)  ? ' &&' : ';') %>
% end
%   _n = member_count-1
%   members.each_with_index do |_m, _i|
% if _m.optional?
    (taox11_optional_cdr_in<<%= _m.cxx_member_type%><%= !_m.cdr_from_helper_type.nil? ? ', ' : '' %><%= _m.cdr_from_helper_type %>>::insert (strm, _tao_aggregate.<%= _m.cxxname %> ()))<%= ((_i < _n ) ? ' &&' : ';') %>
% else
    (strm << <%= _m.cdr_from_fmt % "_tao_aggregate.#{_m.cxxname} ()" %>)<%= ((_i < _n ) ? ' &&' : ';') %>
% end
%   end
% else
  return true;
% end
}

TAO_CORBA::Boolean operator>> (TAO_InputCDR &<% if member_count > 0 || !base.nil? %>strm<% end %>, <%= scoped_cxxname %> &<% if member_count > 0 || !base.nil? %>_tao_aggregate<% end %>)
{
% if member_count > 0 || !base.nil?
  return
% unless base.nil?
    (strm >> static_cast<<%= base.cxxname %>&>(_tao_aggregate))<%= ((member_count > 0)  ? ' &&' : ';') %>
% end
%   members.each_with_index do |_m, _i|
%#  <%= _m.cdr_to_fmt % "_tao_aggregate.#{_m.cxxname} ()" %>
%    if _m.optional?
    (taox11_optional_cdr_out<<%= _m.cxx_member_type%><%= !_m.cdr_to_helper_type.nil? ? ', ' : '' %><%= _m.cdr_to_helper_type %>>::extract (strm, _tao_aggregate.<%= _m.cxxname %> ()))<%= ((_i < _n ) ? ' &&' : ';') %>
%    else
    (strm >> <%= _m.cdr_to_fmt % "_tao_aggregate.#{_m.cxxname} ()" %>)<%= ((_i < _n) ? ' &&' : ';') %>
%     end
%   end
% else
  return true;
% end
}
