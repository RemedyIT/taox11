
// generated from <%= ridl_template_path %>
TAO_CORBA::Boolean operator<< (TAO_OutputCDR &strm, const <%= scoped_cxxname %> &_tao_aggregate)
{
  // First marshal the repository ID and then all members
  return (strm << _tao_aggregate._rep_id ())<%= (member_count == 0 ? ';' : ' &&') %>
% if member_count > 0
%   _n = member_count-1
%   members.each_with_index do |_m, _i|
%     if _m.optional?
         (taox11_optional_cdr_in<<%= _m.cxx_member_type%><%= !_m.cdr_from_helper_type.nil? ? ', ' : '' %><%= _m.cdr_from_helper_type %>>::insert (strm, _tao_aggregate.<%= _m.cxxname %> ()))<%= ((_i < _n ) ? ' &&' : ';') %>
%     else
         (strm <<<%= _m.cdr_from_fmt % "_tao_aggregate.#{_m.cxxname} ()" %>)<%= ((_i < _n ) ? ' &&' : ';') %>
%     end
%   end
% else
% end
}

TAO_CORBA::Boolean operator>> (
% if member_count > 0
    TAO_InputCDR &strm,
    <%= scoped_cxxname %> &_tao_aggregate)
{
  return
%   members.each_with_index do |_m, _i|
%    if _m.optional?
    (taox11_optional_cdr_out<<%= _m.cxx_member_type%><%= !_m.cdr_to_helper_type.nil? ? ', ' : '' %><%= _m.cdr_to_helper_type %>>::extract (strm, _tao_aggregate.<%= _m.cxxname %> ()))<%= ((_i < _n ) ? ' &&' : ';') %>
%    else
    (strm >> <%= _m.cdr_to_fmt % "_tao_aggregate.#{_m.cxxname} ()" %>)<%= ((_i < _n) ? ' &&' : ';') %>
%    end
%   end
% else
    TAO_InputCDR &, <%= scoped_cxxname %> &)
{
  return true;
% end
}
