// generated from <%= ridl_template_path %>
TAO_BEGIN_VERSIONED_NAMESPACE_DECL
% _intf_traits_decl_incl_guard_ = scoped_proxy_cxxname.to_include_guard
#if !defined (_INTF_<%= _intf_traits_decl_incl_guard_ %>_OBJ_REF_TRAITS_)
#define _INTF_<%= _intf_traits_decl_incl_guard_ %>_OBJ_REF_TRAITS_
% unless is_abstract?
namespace TAO
{
  template<>
  struct Objref_Traits<<%= scoped_proxy_cxxname %>>
  {
    static <%= scoped_proxy_cxxname %>_ptr duplicate (<%= scoped_proxy_cxxname %>_ptr p);
    static void release (<%= scoped_proxy_cxxname %>_ptr p);
    static <%= scoped_proxy_cxxname %>_ptr nil ();
    static ::TAO_CORBA::Boolean marshal (const <%= scoped_proxy_cxxname %>_ptr p, TAO_OutputCDR & cdr);
  };
} // namespace TAO
% end
#endif // !_INTF_<%= _intf_traits_decl_incl_guard_ %>_OBJ_REF_TRAITS_
TAO_END_VERSIONED_NAMESPACE_DECL
