
// generated from <%= ridl_template_path %>
% _union_traits_incl_guard_ = scoped_cxxname.to_include_guard
#if !defined (_UNION_<%= _union_traits_incl_guard_ %>_TRAITS_)
#define _UNION_<%= _union_traits_incl_guard_ %>_TRAITS_
template<>
struct traits <<%= scoped_cxxtype %>>
  : IDL::common_traits<<%= scoped_cxxtype %>>
{
  template <typename OStrm_, typename Formatter = formatter<value_type, OStrm_>>
  static inline OStrm_& write_on(
      OStrm_& os_, in_type val_,
      Formatter fmt_ = Formatter ())
  {
    return fmt_ (os_, val_);
  }

  template <typename Formatter = std::false_type>
  static inline __Writer<Formatter> write (in_type val) { return {val}; }
};

template <typename OStrm_>
struct formatter<<%= scoped_cxxtype %>, OStrm_>;

template <typename OStrm_, typename Fmt>
OStrm_& operator <<(
    OStrm_&,
    IDL::traits<<%= scoped_cxxtype %>>::__Writer<Fmt>);
#endif // _UNION_<%= _union_traits_incl_guard_ %>_TRAITS_